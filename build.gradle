plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.11'
    id 'io.gitlab.arturbosch.detekt' version '1.0.0-RC12'
}

version '1.0-SNAPSHOT'

repositories {
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.11"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.0"
    compile "com.sparkjava:spark-core:2.7.2"
    compile "org.slf4j:slf4j-simple:1.7.25"
    compile "com.auth0:java-jwt:3.4.1"
    compile "com.typesafe:config:1.3.2"
    compile "org.apache.kafka:kafka-clients:2.1.0"

    testCompile "org.jetbrains.kotlin:kotlin-test:1.3.11"
    testCompile "org.spekframework.spek2:spek-dsl-jvm:2.0.0-rc.1"

    testRuntimeOnly "org.jetbrains.kotlin:kotlin-reflect:1.3.11"
    testRuntimeOnly "org.spekframework.spek2:spek-runner-junit5:2.0.0-rc.1"
}

test {
    useJUnitPlatform {
        includeEngines "spek2"
    }
}

detekt {
    toolVersion = "1.0.0-RC12"
    input = files("src/main/kotlin")
    filters = ".*/resources/.*,.*/build/.*"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

jar {
    manifest {
        attributes "Main-Class": "urban.memory.AppKt"
    }

    // This line of code recursively collects and copies all of a project's files
    // and adds them to the JAR itself. One can extend this task, to skip certain
    // files or particular types at will
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}
